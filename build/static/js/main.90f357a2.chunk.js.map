{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","Persons","personsToShow","map","key","id","Filter","handleSearchChange","searchCondition","onSubmit","value","onChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchCondition","infoMessage","setInfoMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","filter","includes","event","target","preventDefault","personObject","length","window","confirm","p","find","returnedPerson","setTimeout","catch","error","concat","console","log","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90f357a2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={removePerson}>delete</button>\n    </li>\n  )\n}\n \nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ personsToShow, removePerson }) => {\n  return (\n    personsToShow.map(person =>\n      <Person \n        key={person.name} \n        person={person} \n        removePerson={() => removePerson(person.id)}\n        />)\n  )\n}\n \nexport default Persons","import React from 'react'\n\nconst Filter = ({handleSearchChange}, {searchCondition}) => {\n  return (\n    <form onSubmit={handleSearchChange}>\n      Filter:\n      <input\n        value={searchCondition}\n        onChange={handleSearchChange}\n      />          \n    </form>   \n  )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)  \n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  axios.delete(`${baseUrl}/${id}`)\n  const returnAll = axios.get(baseUrl)\n  return returnAll.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove}","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"info\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchCondition, setSearchCondition] = useState('')\n  const [infoMessage, setInfoMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    } \n\n    if (persons.filter(person => (person.name === newName)).length > 0) {\n      if (window.confirm(`Want to update number of ${newName}?`)) {\n        const p = persons.find(p => p.name === newName)\n        personService\n          .update(p.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== p.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setInfoMessage(\n            `Person ${newName} updated succesfully.`\n            )\n            setTimeout(() => {\n            setInfoMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Person ${newName} was already deleted from server.`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n      }\n    } else if (!newName|| !newNumber) {\n      setErrorMessage('Person must have name and number!')\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n        setInfoMessage(\n          `Person ${newName} added succesfully.`\n        )\n        setTimeout(() => {\n          setInfoMessage(null)\n        }, 5000)\n    }\n  }\n\n  const removePerson = (id) => {    \n    if (window.confirm(`Are you sure?`)) {\n      personService\n      .remove(id)\n      .then(initialPersons => {\n          setPersons(persons.filter(p => p.id !== id))\n      })\n      setInfoMessage(\n        `Person removed succesfully.`\n        )\n        setTimeout(() => {\n        setInfoMessage(null)\n        }, 5000)\n    }   \n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person =>\n     (person.name.includes(searchCondition)))  \n\n  const handleSearchChange = (event) => {\n    setSearchCondition(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={infoMessage} />\n      <Error message={errorMessage} />\n      <div>\n        {<Filter searchCondition={searchCondition} handleSearchChange={handleSearchChange} />}\n      </div>\n      <br></br>\n      <div>\n        <h2>Add a new person</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: \n          <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n          <br></br>\n          number: \n          <input\n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      </div>\n      <h2>Numbers</h2>\n        <ul>\n          {<Persons personsToShow={personsToShow} removePerson={removePerson}/>}          \n        </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}